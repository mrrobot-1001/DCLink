generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // Use your database provider
  url      = env("DATABASE_URL")
}

model User {
  id                 Int           @id @default(autoincrement())
  username           String        @unique
  email              String        @unique
  password           String
  bio                String?
  location           String?
  website            String?
  instagramProfile   String?
  githubProfile      String?
  linkedinProfile    String?
  skills             String?
  currentlyWorkingAt String?
  pastWorkedAt       String?
  joinDate           DateTime      @default(now())
  session            String?
  isAdmin            Boolean       @default(false)
  profilePicture     String?
  connections        Connection[]  @relation("UserConnections")
  connectedBy        Connection[]  @relation("ConnectedByUser")
   messages     Message[]
}

model Connection {
  id          Int      @id @default(autoincrement())
  userId      Int
  connectedTo Int
  createdAt   DateTime @default(now())

  user        User @relation("UserConnections", fields: [userId], references: [id])
  connected   User @relation("ConnectedByUser", fields: [connectedTo], references: [id])
    messages    Message[]

  @@unique([userId, connectedTo]) // Ensures unique connections
}

model Message {
  id            Int        @id @default(autoincrement())
  content       String
  senderId      Int
  connectionId  Int
  createdAt     DateTime   @default(now())

  sender        User       @relation(fields: [senderId], references: [id])
  connection    Connection @relation(fields: [connectionId], references: [id])
}

model Highlight {
  id          Int      @id @default(autoincrement())
  youtubeLink String
  caption     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CarouselItem {
  id        Int      @id @default(autoincrement())
  type      String
  src       String
  alt       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

